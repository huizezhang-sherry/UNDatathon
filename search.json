[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 UNDatathon authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sherry Zhang. Author, maintainer. Roben Delos Reyes. Author. Bernadette Hyland-Wood. Author. John Lyons. Author. Alex Qin. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang S, Delos Reyes R, Hyland-Wood B, Lyons J, Qin (2023). UNDatathon: Geospatial multivariate data analysis pipeline biodiversity disaster management. R package version 0.0.1.","code":"@Manual{,   title = {UNDatathon: Geospatial multivariate data analysis pipeline for biodiversity and disaster management},   author = {Sherry Zhang and Roben {Delos Reyes} and Bernadette Hyland-Wood and John Lyons and Alex Qin},   year = {2023},   note = {R package version 0.0.1}, }"},{"path":[]},{"path":"/index.html","id":"methods","dir":"","previous_headings":"","what":"Methods","title":"Geospatial multivariate data analysis pipeline for biodiversity and disaster management","text":"create data pipeline compute biodiversity indexes (Shannon Index Simpson Index) historical bushfire regions Australia. pipeline includes functionalities : Find shape file postcode disaster data: disaster_as_shape() Query species Atlas Living Australia: query_species() Split occurrence data year month: split_time() Calculate indexes biodiversity data: calculate_idx() Plot calculated indexes: autoplot()","code":""},{"path":"/index.html","id":"results","dir":"","previous_headings":"","what":"Results","title":"Geospatial multivariate data analysis pipeline for biodiversity and disaster management","text":"historical bushfire regions, find two types changes biodiversity indexes bushfire events, regions Shannon index changes 6 less 4.5 Simpsons index changes 0.99 less 0.9.  Team members: Sherry Zhang, Monash University: https://github.com/huizezhang-sherry Roben Delos Reyes, University Melbourne: https://github.com/rddelosreyes Bernadette Hyland-Wood, QUT: https://github.com/BernHyland John Lyons, QUT: https://github.com/cakesy Alex Qin, University Sydney: https://github.com/alexrunqin","code":""},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References:","title":"Geospatial multivariate data analysis pipeline for biodiversity and disaster management","text":"UN Statistics Wiki: https://unstats.un.org/wiki/display/UNDatathon2023/UN+Datathon+Theme Atlas Living Australia: https://www.ala.org.au/ galah pkg: https://galah.ala.org.au/ get-started example: https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-03-07 list Australian animals: https://trishansoz.com/trishansoz/animals/australian-animals.html UN biodiversity map: https://map.unbiodiversitylab.org/ Natural Hazards Research Australia: https://www.naturalhazards.com.au Measuring biodiversity index https://www.coastalwiki.org/wiki/Measurements_of_biodiversity#Margalef.E2.80.99s_diversity_index.5B5.5D Rapid assessment biodiversity impacts 2019–2020 Australian megafires guide urgent management intervention recovery lessons regions, Legge, S., Woinarski, J. C. Z., Scheele, B. C., Garnett, S. T., Lintermans, M., Nimmo, D. G., Whiterod, N. S., Southwell, D. M., Ehmke, G., Buchan, ., Gray, J., Metcalfe, D. J., Page, M., Rumpff, L., van Leeuwen, S., Williams, D., Ahyong, S. T., Chapple, D. G., Cowan, M., … Tingley, R. (2022). Diversity Distributions, 28, 571–591. https://doi.org/10.1111/ddi.13428 Methodological approaches challenges assess environmental losses natural disasters https://doi.org/10.1016/j.ijdrr.2020.101619 Impacts Unprecedented 2019-2020 Bushfires Australian Animals, November 2020 https://assets.wwf.org.au/image/upload/v1674690976/website-media/resources/WWF_Impacts---unprecedented-2019-2020-bushfires--Australian-animals.pdf Use expert knowledge elicit population trends koala (Phascolarctos cinereus) https://doi.org/10.1111/ddi.12400 Biodiversity: need care, Wall, K (2022) https://www.ifaw.org/people/opinions/biodiversity---need--care","code":""},{"path":"/reference/autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot calculated indexes — autoplot","title":"Plot calculated indexes — autoplot","text":"function creates line plot indexes calculated calculate_idx().","code":""},{"path":"/reference/autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot calculated indexes — autoplot","text":"","code":"autoplot(data, time = NULL, site = NULL)"},{"path":"/reference/autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot calculated indexes — autoplot","text":"data .field idx_res object .code calculate_idx(). time time period interest calculation. site site location interest calculation.","code":""},{"path":"/reference/autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot calculated indexes — autoplot","text":"","code":"if (FALSE) { library(dplyr) library(sf) d <- disaster |> filter(cat_name == \"CAT131\") |> disaster_as_shape() s <- query_species(d[1,]) library(tsibble) time <- s$occurrence |> pull(eventDate) |> yearmonth() |> unique() occur <- purrr::map(time, function(x){   s$occurrence |>     mutate(ym = yearmonth(eventDate)) |>     filter(between(ym, x-3, x + 3)) }) names(occur) <- time res <- occur |>   purrr::map_dfr(~calculate_idx(occurrence = .x, taxonomy = s$taxonomy), .id = \"ym\") |>   mutate(ym = time) res |> autoplot(time = ym) }"},{"path":"/reference/calculate_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate indexes from the biodiversity data — calculate_idx","title":"Calculate indexes from the biodiversity data — calculate_idx","text":"function calculates biodiversity indexes (Simpson's Diversity Index, Shannon Diversity Index, Clarke & Warwick's Distinctness Diversity Index) animal data queried Atlas Living Australia","code":""},{"path":"/reference/calculate_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate indexes from the biodiversity data — calculate_idx","text":"","code":"calculate_idx(   data = NULL,   occurrence = NULL,   taxonomy = NULL,   is_count = FALSE,   indexes = c(\"shannon\", \"simpson\", \"CW\") )"},{"path":"/reference/calculate_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate indexes from the biodiversity data — calculate_idx","text":"data galah_res object  query_species(). occurrence dataframe animal occurrence data, can individual occurrence count occurrence count per species. taxonomy dataframe animal taxonmy data. is_count Indicator whether animal occurrence data recorded occurrence count per species. indexes index(es) compute: \"shannon\", \"simpson\" \"CW\".","code":""},{"path":"/reference/calculate_idx.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate indexes from the biodiversity data — calculate_idx","text":"https://www.ala.org.au/","code":""},{"path":"/reference/calculate_idx.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate indexes from the biodiversity data — calculate_idx","text":"","code":"if (FALSE) { library(dplyr) library(sf) d <- disaster |> filter(cat_name == \"CAT131\") |> disaster_as_shape() s <- query_species(d[1,]) s |> calculate_idx() }"},{"path":"/reference/disaster-postcode.html","id":null,"dir":"Reference","previous_headings":"","what":"Disaster data with postcode information — disaster","title":"Disaster data with postcode information — disaster","text":"dataset disasters comes Insurance Council Australia.  Disaster data without postcode information removed. shape files postcodes come Australian Bureau Statistics dataset contains occurrence taxonomy data used ...","code":""},{"path":"/reference/disaster-postcode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disaster data with postcode information — disaster","text":"","code":"disaster  test_ala"},{"path":"/reference/disaster-postcode.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Disaster data with postcode information — disaster","text":"object class tbl_df (inherits tbl, data.frame) 6161 rows 24 columns. object class galah_res (inherits list) length 2.","code":""},{"path":"/reference/disaster-postcode.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disaster data with postcode information — disaster","text":"column name description column name description column name description column name description column name description column name description column name description column name description column name description column name description column name description column name description","code":""},{"path":"/reference/disaster-postcode.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Disaster data with postcode information — disaster","text":"https://insurancecouncil.com.au/industry-members/data-hub/","code":""},{"path":"/reference/disaster_as_shape.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the shape file for the postcode in the disaster data — disaster_as_shape","title":"Find the shape file for the postcode in the disaster data — disaster_as_shape","text":"function extracts shape file postcodes disaster data.","code":""},{"path":"/reference/disaster_as_shape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the shape file for the postcode in the disaster data — disaster_as_shape","text":"","code":"disaster_as_shape(disaster_df, postcode = \"postcode\", as_sfc = FALSE)"},{"path":"/reference/disaster_as_shape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find the shape file for the postcode in the disaster data — disaster_as_shape","text":"disaster_df dataframe containing disaster data. postcode column name postcode disaster data. as_sfc Whether return simple feature column (sfc) object. (default TRUE) simple feature (sf) object.","code":""},{"path":"/reference/disaster_as_shape.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find the shape file for the postcode in the disaster data — disaster_as_shape","text":"","code":"if (FALSE) { library(dplyr) disaster |> filter(cat_name == \"CAT131\") |> disaster_as_shape() }"},{"path":"/reference/query_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Query species from the Atlas of Living Australia — query_species","title":"Query species from the Atlas of Living Australia — query_species","text":"function queries species Atlas Living Australia given time period. function requires registered email website.","code":""},{"path":"/reference/query_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query species from the Atlas of Living Australia — query_species","text":"","code":"query_species(shape, year_vec = c(2019, 2020))"},{"path":"/reference/query_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query species from the Atlas of Living Australia — query_species","text":"shape sfc object. year_vec vector years.","code":""},{"path":"/reference/query_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query species from the Atlas of Living Australia — query_species","text":"","code":"if (FALSE) { library(dplyr) library(sf) d <- disaster |> filter(cat_name == \"CAT131\") |> disaster_as_shape() query_species(d[1,]) }"},{"path":"/reference/split_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Split the occurrence data by year and month — split_time","title":"Split the occurrence data by year and month — split_time","text":"function splits occurence data year month.","code":""},{"path":"/reference/split_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split the occurrence data by year and month — split_time","text":"","code":"split_time(data, window = 3)"},{"path":"/reference/split_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split the occurrence data by year and month — split_time","text":"data .field galah_res object .code query_species. window time window split data.","code":""},{"path":"/reference/split_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split the occurrence data by year and month — split_time","text":"","code":"res <- test_ala |> split_time() res[[1]] #> # A tibble: 1,262 × 9 #>    decimalLatitude decimalLongitude eventDate           scientificName           #>              <dbl>            <dbl> <dttm>              <chr>                    #>  1           -42.7             147. 2019-01-01 16:00:00 Strepera (Strepera) ful… #>  2           -42.7             147. 2019-01-01 16:00:00 Anthochaera (Anthochaer… #>  3           -42.7             147. 2019-01-01 16:00:00 Cacatua (Cacatua) galer… #>  4           -42.7             147. 2019-01-01 16:00:00 Zanda funerea            #>  5           -42.7             147. 2019-01-01 16:00:00 Nesoptilotis flavicollis #>  6           -42.7             147. 2019-01-01 16:00:00 Phylidonyris (Phylidony… #>  7           -42.1             146. 2019-01-02 08:00:00 Corvus tasmanicus        #>  8           -42.1             146. 2019-01-02 08:00:00 Strepera (Strepera) ful… #>  9           -42.1             146. 2019-01-02 08:00:00 Anthochaera (Anthochaer… #> 10           -42.1             146. 2019-01-02 08:00:00 Phylidonyris (Phylidony… #> # ℹ 1,252 more rows #> # ℹ 5 more variables: taxonConceptID <chr>, recordID <chr>, #> #   dataResourceName <chr>, occurrenceStatus <chr>, ym <mth>"}]
